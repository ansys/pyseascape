# check spelling, codestyle
name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  MAIN_PYTHON_VERSION: '3.9'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  style:
    name: Style Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Install style requirements
        run: |
          pip install -r requirements_style.txt --disable-pip-version-check

      - name: Codespell
        run: |
          make codespell

      - name: flake8
        run: |
          make flake8

  main:
    name: Build and Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements_*.txt'


      - name: Create wheel
        run: |
          pip install build
          python -m build

      - name: Validate wheel
        run: |
          pip install twine
          twine check dist/*

      - name: Install library
        run: pip install dist/*.whl

      - name: Unit testing
        run: |
          pip install -r requirements_test.txt
          cd tests  # so we're testing the install, not local
          pytest -vx

      - name: Upload wheel
        uses: actions/upload-artifact@v2
        with:
          name: ansys-seascape-wheel
          path: dist/
          retention-days: 7

  docs_style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  docs_build:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: 'requirements_*.txt'

      - name: Install library
        run: pip install .

      - name: Build HTML
        run: |
          pip install -r requirements_docs.txt
          make -C doc html SPHINXOPTS="-W"

      - name: Build PDF Documentation
        run: |
          sudo apt update
          sudo apt-get install -y texlive-latex-extra latexmk
          make -C doc latexpdf

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-html
          path: doc/_build/html
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v2
        with:
          name: Documentation-pdf
          path: doc/_build/latex/*.pdf
          retention-days: 7

  Release:
    if: contains(github.ref, 'refs/tags')
    needs: [main, style, docs_style, docs_build]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ansys-seascape-wheel

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-pdf

      - uses: actions/download-artifact@v2
        with:
          name: Documentation-html
          path: ~/html

      # list current directory
      - name: List directory structure
        run: ls -R

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          repository-name: pyansys/pyseascape-docs
          token: ${{ steps.get_workflow_token.outputs.token }}
          branch: gh-pages
          folder: ~/html
          clean: true
          single-commit: true

      # note how we use the PyPI tokens
      - name: Upload to TestPyPi #(disabled)
        run: |
          pip install twine
          twine upload --repository testpypi --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
